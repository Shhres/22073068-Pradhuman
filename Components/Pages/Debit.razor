@page "/debit"

<div class="container mt-5">
    <div class="d-flex justify-content-center">
        <div class="card shadow-lg" style="width: 100%; max-width: 600px;">
            <div class="card-header bg-danger text-white text-center">
                <h3 class="mb-0">Debit Transaction</h3>
            </div>
            <div class="card-body p-4">
                <form @onsubmit="HandleSubmit">
                    <!-- Description -->
                    <div class="mb-4">
                        <label for="description" class="form-label">Description</label>
                        <textarea id="description" class="form-control form-control-lg" rows="3"
                                  placeholder="Enter description" @bind="Description"></textarea>
                    </div>

                    <!-- Category -->
                    <div class="mb-4">
                        <label for="category" class="form-label">Category</label>
                        <input type="text" id="category" class="form-control form-control-lg"
                               placeholder="Enter category" @bind="Category" />
                    </div>

                    <!-- Amount and Loan Amount side by side -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <label for="amount" class="form-label">Amount</label>
                            <select id="amount" class="form-select form-select-lg" @bind="Amount">
                                <option value="0" disabled selected>-- Select Amount --</option>
                                @for (int i = 1000; i <= 100000; i += 1000)
                                {
                                        <option value="@i">@i</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="loanAmount" class="form-label">Loan Amount</label>
                            <input type="number" id="loanAmount" class="form-control form-control-lg"
                                   placeholder="Enter loan amount" @bind="LoanAmount" />
                        </div>
                    </div>

                    <!-- Cash In Button -->
                    <div class="d-grid gap-2 mb-4">
                        <button type="submit" class="btn btn-danger btn-lg" style="width:100%;">
                          Borrow Amount
                        </button>
                    </div>

                    <!-- Validation Message -->
                    @if (!string.IsNullOrEmpty(ValidationMessage))
                    {
                            <div class="alert alert-danger text-center" role="alert">
                            @ValidationMessage
                            </div>
                    }

                    <!-- Success Message -->
                    @if (TransactionCompleted)
                    {
                            <div class="alert alert-success text-center" role="alert">
                                Transaction Completed
                            </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>

@code {
    private string Description { get; set; } = string.Empty;
    private string Category { get; set; } = string.Empty;
    private int Amount { get; set; } = 0;
    private int LoanAmount { get; set; } = 0; // New field for loan amount
    private string ValidationMessage { get; set; } = string.Empty;
    private bool TransactionCompleted { get; set; } = false;

    private void HandleSubmit()
    {
        if (string.IsNullOrEmpty(Description) || string.IsNullOrEmpty(Category) || Amount == 0 || LoanAmount == 0)
        {
            ValidationMessage = "Please fill out all fields.";
            TransactionCompleted = false;
        }
        else
        {
            ValidationMessage = string.Empty;
            TransactionCompleted = true;

            // Processing logic (like saving to the database or API call)
            Console.WriteLine($"Description: {Description}");
            Console.WriteLine($"Category: {Category}");
            Console.WriteLine($"Amount: {Amount}");
            Console.WriteLine($"Loan Amount: {LoanAmount}");

            // Reset form fields after submission
            Description = string.Empty;
            Category = string.Empty;
            Amount = 0;
            LoanAmount = 0; // Reset loan amount
        }
    }
}

<style>
    /* Remove hover effect for btn-danger */
    .btn-danger {
        background-color: #dc3545 !important;
        border-color: #dc3545 !important;
    }

    /* Optional: You can style the form fields for better visibility */
    .form-control-lg {
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
        border-radius: 8px;
    }

    /* Container styling */
    .container {
        max-width: 700px;
    }
</style>
