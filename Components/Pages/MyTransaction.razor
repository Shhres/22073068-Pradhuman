@page "/mytransaction"
@using MauiApp1.Models
@inject UserService UserService

<h1>User Transactions</h1>

<table class="table">
    <thead>
        <tr>
            <th>Transaction ID</th>
            <th>Main Balance</th>
            <th>Debit</th>
            <th>Credit</th>
            <th>Date</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var transaction in Data.Transactions)
        {
            <tr>
                <td>@transaction.Id</td>
                <td>@(Data.Transactions.Sum(t => t.Credit) - Data.Transactions.Sum(t => t.Debit))</td>
                <td>@transaction.Debit</td>
                <td>@transaction.Credit</td>
                <td>@transaction.Date.ToString("MM/dd/yyyy")</td>
                <td>@transaction.Description</td>
            </tr>
        }
    </tbody>
</table>

<h2>Add New Transaction</h2>
<EditForm Model="newTransaction" OnValidSubmit="HandleTransactionSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="debit">Debit</label>
        <InputNumber id="debit" @bind-Value="newTransaction.Debit" class="form-control" />
    </div>

    <div class="form-group">
        <label for="credit">Credit</label>
        <InputNumber id="credit" @bind-Value="newTransaction.Credit" class="form-control" />
    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="newTransaction.Description" class="form-control" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Add Transaction</button>
    </div>
</EditForm>

@code {
    private AppData Data;
    private Transaction newTransaction = new Transaction();

    protected override void OnInitialized()
    {
        Data = UserService.LoadData();
    }

    private void HandleTransactionSubmit()
    {
        newTransaction.Id = Data.Transactions.Count + 1;
        newTransaction.Date = DateTime.Now;
        Data.Transactions.Add(newTransaction);
        UserService.SaveData(Data);

        // Reset form
        newTransaction = new Transaction();
    }
}
